<?xml version="1.0"?>
<robot name="robot" xmlns:xacro="http://ros.org/wiki/xacro"> 
  
  <xacro:property name="package_name" value="xema_s"/>
  <xacro:property name="PI" value="3.14159265"/>
  
  <xacro:property name="wheelSeparation" value="0.13"/>
  <xacro:property name="wheelDiameter" value="0.07"/>
  <xacro:property name="wheelThickness" value="0.024"/>
  <xacro:property name="base_elevation" value="0.01"/>

  <xacro:arg name="base_color"    default="1.0 0.0 0.0 1.0"/>
  <xacro:arg name="ns"    default="diffbot"/>
  
  <!-- Custom color (for Ign and RViz) -->
  <material name="gray">
    <color rgba="0.4 0.4 0.4 1.0"/>
  </material>
  
  
  <link name="$(arg ns)/base_footprint"/>

  <joint name="$(arg ns)/base_joint" type="fixed">
    <parent link="$(arg ns)/base_footprint"/>
    <child link="$(arg ns)/base_link"/>
    <origin xyz="0 0 ${base_elevation}" rpy="0 0 0"/>
  </joint>

  <link name="$(arg ns)/base_link">
    <visual>
      <origin xyz="-0.033 0.0 0.04" rpy="0 0 ${PI}"/>
      <geometry>
        <mesh filename="package://${package_name}/meshes/base_plate.stl" scale="1 1 1"/>
      </geometry>
      <material name="base_color"> <!-- Color in IGN and Rviz2 (inside visual tag) -->
        <color rgba="$(arg base_color)"/>
      </material>
    </visual>
    <collision>
      <origin xyz="-0.033 0 0.04" rpy="0 0 0"/>
      <geometry>
        <box size="0.2 0.1 0.01"/>
      </geometry>
    </collision>
    <!-- Collision tag added to stabilize the robot -->
    <collision> 
      <origin xyz="0.06 0 0.002" rpy="0 0 0"/>
      <geometry>
        <sphere radius="0.01"/>
      </geometry>
    </collision>
    <inertial>
      <origin xyz="0 0 ${wheelDiameter-base_elevation}" rpy="0 0 0"/>
      <mass value="10"/>
      <inertia ixx="0.333333" ixy="0.0" ixz="0.0"  iyy="0.333333" iyz="0.0"  izz="0.6"/>
    </inertial>
  </link>


  <!-- Wheels definition (joints and links) -->
  <joint name="$(arg ns)/wheel_left_joint" type="continuous">
    <parent link="$(arg ns)/base_link"/>
    <child link="$(arg ns)/wheel_left_link"/>
    <origin xyz="0 ${wheelSeparation/2} ${wheelDiameter/2-base_elevation}" rpy="${-PI/2} 0 0"/>
    <axis xyz="0 0 1"/>
    <limit effort="10" velocity="10"/>
  </joint>

  <link name="$(arg ns)/wheel_left_link">
    <visual>
      <origin xyz="0 0 0.015" rpy="0 0 0"/>
      <geometry>
        <mesh filename="package://${package_name}/meshes/wheel_ring.stl" scale="1 1 1"/>
      </geometry>
      <material name="gray"/> <!-- Color in Rviz2 (inside visual tag) -->
    </visual>
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <cylinder length="${wheelThickness}" radius="${wheelDiameter/2}"/>
      </geometry>
    </collision>
    <inertial>
      <origin xyz="0 0 0" />
      <mass value="5" />
      <inertia ixx="0.0135417" ixy="0.0" ixz="0.0"  iyy="0.0135417" iyz="0.0"  izz="0.025"/>
      </inertial>
  </link>

  <joint name="$(arg ns)/wheel_right_joint" type="continuous">
    <parent link="$(arg ns)/base_link"/>
    <child link="$(arg ns)/wheel_right_link"/>
    <origin xyz="0 ${-wheelSeparation/2} ${wheelDiameter/2-base_elevation}" rpy="${-PI/2} 0 0"/>
    <axis xyz="0 0 1"/>
  </joint>

  <link name="$(arg ns)/wheel_right_link">
    <visual>
      <origin xyz="0 0 -0.015" rpy="${PI} 0 0"/> <!-- -z and r=PI for the other wheel -->
      <geometry>
        <mesh filename="package://${package_name}/meshes/wheel_ring.stl" scale="1 1 1"/>
      </geometry>
      <material name="gray"/>
    </visual>
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <cylinder length="${wheelThickness}" radius="${wheelDiameter/2}"/>
      </geometry>
    </collision>
    <inertial>
      <origin xyz="0 0 0" />
      <mass value="5" />
      <inertia ixx="0.0135417" ixy="0.0" ixz="0.0"  iyy="0.0135417" iyz="0.0"  izz="0.025"/>
    </inertial>
  </link>

  <!-- Caster wheel definition (joints and links) -->
  <joint name="$(arg ns)/caster_base_joint" type="continuous">
    <origin xyz="-0.104 0 0.015" rpy="0 0 ${PI}"/>
    <parent link="$(arg ns)/base_link"/>
    <child link="$(arg ns)/caster_base_link"/>
    <axis xyz="0 0 1"/>
  </joint>
  
  <link name="$(arg ns)/caster_base_link">
    <visual>
      <origin xyz="0 0 0.015" rpy="${-PI} 0 0"/>
      <geometry>
        <mesh filename="package://${package_name}/meshes/base_caster.stl"/>
      </geometry>
      <material name="base_color"/>
    </visual>
    <inertial> <!-- inertia tag must be set for this link -->
      <origin xyz="0 0 0" rpy="0 0 0" />
      <mass value="0.5" />
      <inertia ixx="0.00004" ixy="0" ixz="0" iyy="0.00004" iyz="0" izz="0.00001"/>
    </inertial>
  </link>

  <joint name="$(arg ns)/caster_wheel_joint" type="continuous">
    <origin xyz="0.015014 -0.00012272 -0.01" rpy="0 ${-PI/2} ${PI/2}"/>
    <parent link="$(arg ns)/caster_base_link"/>
    <child link="$(arg ns)/caster_wheel_link"/>
    <axis xyz="0 0 1"/>
  </joint>
  
  <link name="$(arg ns)/caster_wheel_link">
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <mesh filename="package://${package_name}/meshes/caster_wheel.stl"/>
      </geometry>
      <material name="gray"/>
    </visual>
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <cylinder length="0.01" radius="0.015"/>
      </geometry>
    </collision>
    <inertial>
      <origin xyz="6.93889390390723E-18 -2.62037475051713E-11 -2.77710070911708E-09" rpy="0 0 0"/>
      <mass value="0.08"/>
      <inertia ixx="0.0004" ixy="0" ixz="0" iyy="0.0004" iyz="0" izz="0.00001"/>
    </inertial>
  </link>


  <!-- ************************ SENSORS DEFINITION ***************************** -->
  <!-- IMU -->
  <gazebo reference="$(arg ns)/base_link">
    <sensor name="imu_sensor" type="imu">
      <ignition_frame_id>$(arg ns)/base_link</ignition_frame_id>
      <always_on>1</always_on>
      <update_rate>50</update_rate>
      <visualize>false</visualize>
      <topic>$(arg ns)/imu</topic>
      <imu>
        <enable_orientation>0</enable_orientation>
        <angular_velocity>
          <x>
            <noise type="gaussian">
              <mean>0</mean>
              <stddev>0.009</stddev>
              <bias_mean>0.00075</bias_mean>
              <bias_stddev>0.005</bias_stddev>
              <dynamic_bias_stddev>0.00002</dynamic_bias_stddev>
              <dynamic_bias_correlation_time>400.0</dynamic_bias_correlation_time>
              <precision>0.00025</precision>
            </noise>
          </x>
          <y>
            <noise type="gaussian">
              <mean>0</mean>
              <stddev>0.009</stddev>
              <bias_mean>0.00075</bias_mean>
              <bias_stddev>0.005</bias_stddev>
              <dynamic_bias_stddev>0.00002</dynamic_bias_stddev>
              <dynamic_bias_correlation_time>400.0</dynamic_bias_correlation_time>
              <precision>0.00025</precision>
            </noise>
          </y>
          <z>
            <noise type="gaussian">
              <mean>0</mean>
              <stddev>0.009</stddev>
              <bias_mean>0.00075</bias_mean>
              <bias_stddev>0.005</bias_stddev>
              <dynamic_bias_stddev>0.00002</dynamic_bias_stddev>
              <dynamic_bias_correlation_time>400.0</dynamic_bias_correlation_time>
              <precision>0.00025</precision>
            </noise>
          </z>
        </angular_velocity>
        <linear_acceleration>
          <x>
            <noise type="gaussian">
              <mean>0</mean>
              <stddev>0.021</stddev>
              <bias_mean>0.05</bias_mean>
              <bias_stddev>0.0075</bias_stddev>
              <dynamic_bias_stddev>0.000375</dynamic_bias_stddev>
              <dynamic_bias_correlation_time>175.0</dynamic_bias_correlation_time>
              <precision>0.005</precision>
            </noise>
          </x>
          <y>
            <noise type="gaussian">
              <mean>0</mean>
              <stddev>0.021</stddev>
              <bias_mean>0.05</bias_mean>
              <bias_stddev>0.0075</bias_stddev>
              <dynamic_bias_stddev>0.000375</dynamic_bias_stddev>
              <dynamic_bias_correlation_time>175.0</dynamic_bias_correlation_time>
              <precision>0.005</precision>
            </noise>
          </y>
          <z>
            <noise type="gaussian">
              <mean>0</mean>
              <stddev>0.021</stddev>
              <bias_mean>0.05</bias_mean>
              <bias_stddev>0.0075</bias_stddev>
              <dynamic_bias_stddev>0.000375</dynamic_bias_stddev>
              <dynamic_bias_correlation_time>175.0</dynamic_bias_correlation_time>
              <precision>0.005</precision>
            </noise>
          </z>
        </linear_acceleration>
      </imu>
    </sensor>
  </gazebo>

  <!-- LIDAR -->
  <joint name="$(arg ns)/lidar_joint" type="fixed">
    <parent link="$(arg ns)/base_link"/>
    <child link="$(arg ns)/lidar_link"/>
    <origin xyz="-0.04 0 0.07" rpy="0 0 0"/>
  </joint>
  <link name="$(arg ns)/lidar_link">
    <visual>
      <origin xyz="-0.0275 -0.0275 -0.02" rpy="0 0 0"/>
      <geometry>
        <mesh filename="package://${package_name}/meshes/Lidar_pacecat.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="black">
        <color rgba="0.1 0.1 0.1 1.0"/>
      </material>
    </visual>
  </link>

  <gazebo reference="$(arg ns)/lidar_link">
    <sensor name='gpu_lidar' type='gpu_lidar'>"
      <ignition_frame_id>$(arg ns)/lidar_link</ignition_frame_id> 
      <update_rate>10</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>360</samples>
            <resolution>1</resolution>
            <min_angle>${-PI}</min_angle>
            <max_angle>${PI}</max_angle>
          </horizontal>
          <vertical>
            <samples>16</samples>
            <resolution>1</resolution>
            <min_angle>-0.261799</min_angle>
            <max_angle>0.261799</max_angle>
          </vertical>
        </scan>
        <range>
          <min>0.1</min>
          <max>20.0</max>
          <resolution>0.017453</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <alwaysOn>1</alwaysOn>
      <visualize>false</visualize>
      <topic>$(arg ns)/lidar</topic>
    </sensor>
  </gazebo>

<!-- MONOCULAR CAMERA - XEMA -S-->
<joint name="$(arg ns)/camera_joint" type="fixed">
  <origin xyz="-0.15 -0.0095 0.055" rpy="0 0 ${PI}"/>
  <parent link="$(arg ns)/base_link"/>
  <child link="$(arg ns)/camera_frame"/>
</joint>
<link name="$(arg ns)/camera_frame">
  <visual>
    <origin xyz="0 0 0" rpy="0 0 0"/>
    <geometry>
      <mesh filename="package://${package_name}/meshes/xema_s.dae" scale="0.001 0.001 0.001"/>
    </geometry>
    <material name="white">
      <color rgba="0.9 0.9 0.9 1.0"/>
    </material>
  </visual>
</link>

<gazebo reference="$(arg ns)/camera_frame">
  <sensor name="camera" type="camera">
    <ignition_frame_id>$(arg ns)/camera_frame</ignition_frame_id>
    <optical_frame_id>$(arg ns)/camera_frame</optical_frame_id>
    <camera>
      <horizontal_fov>1.221730</horizontal_fov>
      <image>
        <width>1920</width>
        <height>1080</height>
        <format>RGB_INT8</format>
      </image>
      <camera_info_topic>$(arg ns)/camera/camera_info</camera_info_topic>
      <clip>
        <near>0.2</near>
        <far>20</far>
      </clip>
      <distortion>
        <k1>0.089</k1>
        <k2>-0.225</k2>
        <k3>0.101</k3>
        <p1>0.00033</p1>
        <p2>0.00022</p2>
        <center>0.5 0.5</center>
      </distortion>
    </camera>
    <always_on>1</always_on>
    <update_rate>30</update_rate>
    <visualize>false</visualize>
    <topic>$(arg ns)/camera/image_raw</topic>
    <enable_metrics>true</enable_metrics>
  </sensor>
</gazebo>

<!-- RGBD CAMERA - XEMA -S -->
<joint name="$(arg ns)/rgbd_camera_joint" type="fixed">
  <origin xyz="0.07 0.0095 0.055" rpy="0 0 0"/>
  <parent link="$(arg ns)/base_link"/>
  <child link="$(arg ns)/rgbd_camera_frame"/>
</joint>
<link name="$(arg ns)/rgbd_camera_frame">
  <visual>
    <origin xyz="0 0 0" rpy="0 0 0"/>
    <geometry>
      <mesh filename="package://${package_name}/meshes/xema_s.dae" scale="0.001 0.001 0.001"/>
    </geometry>
    <material name="white">
      <color rgba="0.9 0.9 0.9 1.0"/>
    </material>
  </visual>
</link>

<gazebo reference="$(arg ns)/rgbd_camera_frame">
  <sensor name="rgbd_camera" type="rgbd_camera">
    <ignition_frame_id>$(arg ns)/rgbd_camera_frame</ignition_frame_id>
    <camera name="rgbd_camera_frame">
      <horizontal_fov>1.3962634</horizontal_fov>
      <lens>
        <intrinsics>
          <fx>277.1</fx>
          <fy>277.1</fy>
          <cx>160.5</cx>
          <cy>120.5</cy>
          <s>0</s>
        </intrinsics>
      </lens>
      <distortion>
        <k1>0.075</k1>
        <k2>-0.200</k2>
        <k3>0.095</k3>
        <p1>0.00045</p1>
        <p2>0.00030</p2>
        <center>0.5 0.5</center>
      </distortion>
      <image>
        <width>1280</width>
        <height>720</height>
        <format>L8</format>
      </image>
      <clip>
        <near>0.1</near>
        <far>15</far>
      </clip>
      <depth_camera>
        <clip>
          <near>0.1</near>
          <far>15</far>
        </clip>
       </depth_camera>
    </camera>
    <always_on>1</always_on>
    <update_rate>30</update_rate>
    <visualize>0</visualize>
    <topic>$(arg ns)/depth_camera</topic>
  </sensor>
</gazebo>


  <gazebo>
    <plugin
      filename="ignition-gazebo-diff-drive-system"
      name="ignition::gazebo::systems::DiffDrive">
      <!-- By default, cmd_vel topic is used -->
      <left_joint>$(arg ns)/wheel_left_joint</left_joint>
      <right_joint>$(arg ns)/wheel_right_joint</right_joint>
      <wheel_separation>${wheelSeparation}</wheel_separation>
      <wheel_radius>${wheelDiameter/2}</wheel_radius>
      <max_linear_acceleration>0.5</max_linear_acceleration>
      <min_linear_acceleration>-0.5</min_linear_acceleration>
      <max_angular_acceleration>1</max_angular_acceleration>
      <min_angular_acceleration>-1</min_angular_acceleration>
      <max_linear_velocity>0.5</max_linear_velocity>
      <min_linear_velocity>-0.3</min_linear_velocity>
      <max_angular_velocity>1</max_angular_velocity>
      <min_angular_velocity>-1</min_angular_velocity>
      <odom_topic>encoder</odom_topic> <!-- THIS TAG IS REQUIRED TO USE THE WORLD PLUING -->
    </plugin>

    <!-- World odometry plugin (by default, odometry topic is used) -->
    <plugin filename="ignition-gazebo-odometry-publisher-system"
      name="ignition::gazebo::systems::OdometryPublisher">
      <dimensions>3</dimensions>
      <robot_base_frame>base_footprint</robot_base_frame>
      <publish_link_pose>true</publish_link_pose>
    </plugin>

    <plugin
      filename="gz-sim-joint-state-publisher-system"
      name="gz::sim::systems::JointStatePublisher">
    </plugin>


    <!-- Linear battery plugin -->
    <plugin filename="libignition-gazebo-linearbatteryplugin-system.so"
      name="ignition::gazebo::systems::LinearBatteryPlugin">
      <battery_name>linear_battery</battery_name>
      <voltage>12.694</voltage>
      <open_circuit_voltage_constant_coef>12.694</open_circuit_voltage_constant_coef>
      <open_circuit_voltage_linear_coef>-3.1424</open_circuit_voltage_linear_coef>
      <initial_charge>78.4</initial_charge>
      <capacity>78.4</capacity>
      <resistance>0.061523</resistance>
      <smooth_current_tau>1.9499</smooth_current_tau>
      <power_load>6.6</power_load>
      <start_on_motion>true</start_on_motion>
    </plugin>

  </gazebo>

</robot>
